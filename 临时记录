/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode result = new ListNode(0);
        ListNode temp = result;
        int in = 0;
        while(l1 != null || l2 != null){
            result.next = new ListNode(0);
            if(l1 != null && l2 != null){
                if(l1.val + l2.val + in > 9){
                    result.next.val = (l1.val + l2.val + in) % 10;
                    in = 1;
                }else{
                    result.next.val = l1.val + l2.val + in;
                    in = 0;
                }
                l1 = l1.next;
                l2 = l2.next;                            
                result = result.next;
            }else if(l1 != null){
                if(l1.val + in > 9){
                    result.next.val = (l1.val + in) % 10;
                    in = 1;
                }else{
                    result.next.val = l1.val + in;
                    result = result.next;
                    result.next = l1.next;
                }
                return temp.next;
            }else{
                if(l2.val + in > 9 ){
                    result.next.val = (l2.val + in) % 10;
                    in = 1; 
                }else{
                    result.next.val = l2.val + in;
                    result = result.next;
                    result.next = l2.next;
                }
                return temp.next;
            }
        }
        if(in == 1){
            result = new ListNode(0);
            result.val = 1;
        }
        return temp.next;
    }
}
